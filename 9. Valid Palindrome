A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.



CODE:




class Solution {
    public boolean isPalindrome(String s) {
        StringBuilder sb = new StringBuilder();
      for(int i=0;i<s.length();i++)
      {
          if(s.charAt(i) >= 'a' && s.charAt(i) <= 'z') sb.append(s.charAt(i));
          if(s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') sb.append(Character.toLowerCase(s.charAt(i)));
          if(s.charAt(i) >= '0' && s.charAt(i) <= '9') sb.append(s.charAt(i));
      }
        for(int j=0;j<sb.length();j++)
        {
            if(sb.charAt(j) != sb.charAt(sb.length()-j-1)) return false;
        }
        return true;
    }
}
